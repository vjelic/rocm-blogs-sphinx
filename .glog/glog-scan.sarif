{
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Glog.AI",
          "organization": "Glog.AI",
          "fullName": "Glog, Making software more secure",
          "version": "1.0.0",
          "semanticVersion": "1.0.0",
          "informationUri": "https://www.glog.ai",
          "rules": [
            {
              "id": "f728b990-5a67-3175-b152-ba92b4f435b2",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "2d9243ff-6f22-33db-8074-4c6a2bdb7aaf",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "4c5b94a0-28a2-39fb-8c32-c90c26daab84",
              "name": "python.lang.compatibility.python37.python37-compatibility-importlib2",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.compatibility.python37.python37-compatibility-importlib2"
              },
              "fullDescription": {
                "text": "Found 'importlib.resources', which is a module only available on Python 3.7+. This does not work in lower versions, and therefore is not backwards compatible. Use importlib_resources instead for older Python versions."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.compatibility.python37.python37-compatibility-importlib2",
              "help": {
                "text": "Found 'importlib.resources', which is a module only available on Python 3.7+. This does not work in lower versions, and therefore is not backwards compatible. Use importlib_resources instead for older Python versions.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Found 'importlib.resources', which is a module only available on Python 3.7+. This does not work in lower versions, and therefore is not backwards compatible. Use importlib_resources instead for older Python versions.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.compatibility.python37.python37-compatibility-importlib2)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.compatibility.python37.python37-compatibility-importlib2"
                ]
              }
            },
            {
              "id": "c17838a4-6196-3d5b-bdcf-c2f6dfc9a413",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "268fe457-0c1f-3ab5-b399-891ed0ca9d96",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "73991aea-cd00-3d14-a49f-9a8baeb75f53",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "5a516f4d-3795-3771-8a00-1b571bc384b4",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "e79ca689-4f32-3ee3-942e-1d784d8b5294",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "4be51b5c-b78f-302a-9a4c-ad5434993e24",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "3b9b2264-9ffc-3010-b3d0-812966b055c4",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "8e5d8fbb-607e-3196-8eb0-0391ce99e263",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "781aea48-3a6f-32c8-ae7d-5b7d28fe0e53",
              "name": "python.flask.security.xss.audit.direct-use-of-jinja2.direct-use-of-jinja2",
              "shortDescription": {
                "text": "Opengrep Finding: python.flask.security.xss.audit.direct-use-of-jinja2.direct-use-of-jinja2"
              },
              "fullDescription": {
                "text": "Detected direct use of jinja2. If not done properly, this may bypass HTML escaping which opens up the application to cross-site scripting (XSS) vulnerabilities. Prefer using the Flask method 'render_template()' and templates with a '.html' extension in order to prevent XSS."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.flask.security.xss.audit.direct-use-of-jinja2.direct-use-of-jinja2",
              "help": {
                "text": "Detected direct use of jinja2. If not done properly, this may bypass HTML escaping which opens up the application to cross-site scripting (XSS) vulnerabilities. Prefer using the Flask method 'render_template()' and templates with a '.html' extension in order to prevent XSS.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Detected direct use of jinja2. If not done properly, this may bypass HTML escaping which opens up the application to cross-site scripting (XSS) vulnerabilities. Prefer using the Flask method 'render_template()' and templates with a '.html' extension in order to prevent XSS.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.flask.security.xss.audit.direct-use-of-jinja2.direct-use-of-jinja2)\n - [https://jinja.palletsprojects.com/en/2.11.x/api/#basics](https://jinja.palletsprojects.com/en/2.11.x/api/#basics)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.flask.security.xss.audit.direct-use-of-jinja2.direct-use-of-jinja2"
                ]
              }
            },
            {
              "id": "afea2490-6690-3aca-9657-7d2e38ef125a",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "c9955e05-3b27-395c-8d30-c36b2533e747",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "9b412e2d-6088-3c56-91c8-1aa3c1f37fac",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "6c49369f-e516-3c4f-81ec-2a5f640f6aa6",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "b34b7423-40b3-312d-b701-1e597f615046",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "4270cf53-106f-3495-9f91-59a6895cfda8",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "ed0174a2-245a-38c9-945e-338a02775801",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "9289663f-c790-3807-a60c-ecbc3de88c79",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "e02234d4-83e2-371d-8385-55c86b62eb6d",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "b86b9230-411c-3343-a46a-512fbbb71383",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "3c355e61-1e9f-3c87-b8c8-c327989076b6",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "a306b6c1-d11f-3e89-8da5-bebadd7d62e7",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "611de93e-0e59-3fc5-8e8e-d69207727263",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "6feb23aa-6706-385a-a436-ad10b38b0780",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "36e566a9-606f-317e-8888-01602f3417c3",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "7b3e8110-8c06-33a1-b17d-e727be96d0f8",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "4d694d1c-d945-39a6-b536-6d810d496b18",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "58b64503-83d2-35d5-87dd-5b8aa8de0c1d",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "49003574-f836-32f7-ba40-b7dd62ead992",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "0d165f5d-fe1e-37ad-9c20-1e34fb7fb95d",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "23777399-f8a8-320b-9271-d8b8bffbbef7",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "ad9df4c8-70c7-3ad4-b551-704e5ee40f23",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "792a832e-6d75-3536-aac6-2b574deb06cc",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "492bf243-f0b5-3b9b-ae53-c38f304097eb",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "ec366195-b383-3657-b2f6-4337c2be29c5",
              "name": "resources.rules.open-never-closed",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.open-never-closed"
              },
              "fullDescription": {
                "text": "file object opened without corresponding close"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "file object opened without corresponding close\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "file object opened without corresponding close\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.open-never-closed"
                ]
              }
            },
            {
              "id": "4e1ae794-d729-3501-a99f-dee4bf0be89c",
              "name": "resources.rules.open-never-closed",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.open-never-closed"
              },
              "fullDescription": {
                "text": "file object opened without corresponding close"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "file object opened without corresponding close\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "file object opened without corresponding close\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.open-never-closed"
                ]
              }
            },
            {
              "id": "0553911f-3ccc-38d5-9769-7f0b7d33bf01",
              "name": "resources.rules.unquoted-csv-writer",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.unquoted-csv-writer"
              },
              "fullDescription": {
                "text": "Found an unquoted CSV writer. This is susceptible to injection. Use 'quoting=csv.QUOTE_ALL'."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Found an unquoted CSV writer. This is susceptible to injection. Use 'quoting=csv.QUOTE_ALL'.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Found an unquoted CSV writer. This is susceptible to injection. Use 'quoting=csv.QUOTE_ALL'.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://affinity-it-security.com/how-to-prevent-csv-injection/](https://affinity-it-security.com/how-to-prevent-csv-injection/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.unquoted-csv-writer"
                ]
              }
            },
            {
              "id": "646d76d3-779b-32a4-bd40-6716a033058c",
              "name": "resources.rules.open-never-closed",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.open-never-closed"
              },
              "fullDescription": {
                "text": "file object opened without corresponding close"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "file object opened without corresponding close\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "file object opened without corresponding close\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.open-never-closed"
                ]
              }
            },
            {
              "id": "f918969c-c632-3703-836d-ed8f554b18b8",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "416366cb-80b2-32b0-bbeb-d88483de40a0",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "a15b5e99-16a9-38da-9231-8cca4d353330",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "ab59049d-ac78-3a36-9473-7f116b6c113b",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "fe5b0c05-8937-3f7b-a647-8add6dd2effa",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "060eab55-1789-36b9-aeba-719e31dfcd7e",
              "name": "html.security.audit.missing-integrity.missing-integrity",
              "shortDescription": {
                "text": "Opengrep Finding: html.security.audit.missing-integrity.missing-integrity"
              },
              "fullDescription": {
                "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) youâ€™re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
              "help": {
                "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) youâ€™re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) youâ€™re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity)\n - [https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures](https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "html.security.audit.missing-integrity.missing-integrity"
                ]
              }
            },
            {
              "id": "1bbbd0ae-11d4-34c6-9d71-bbad7100b846",
              "name": "resources.rules.template-href-var",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.template-href-var"
              },
              "fullDescription": {
                "text": "Detected a template variable used in an anchor tag with\nthe 'href' attribute. This allows a malicious actor to\ninput the 'javascript:' URI and is subject to cross-\nsite scripting (XSS) attacks. Use the 'url' template tag\nto safely generate a URL. You may also consider setting\nthe Content Security Policy (CSP) header.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Detected a template variable used in an anchor tag with\nthe 'href' attribute. This allows a malicious actor to\ninput the 'javascript:' URI and is subject to cross-\nsite scripting (XSS) attacks. Use the 'url' template tag\nto safely generate a URL. You may also consider setting\nthe Content Security Policy (CSP) header.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Detected a template variable used in an anchor tag with\nthe 'href' attribute. This allows a malicious actor to\ninput the 'javascript:' URI and is subject to cross-\nsite scripting (XSS) attacks. Use the 'url' template tag\nto safely generate a URL. You may also consider setting\nthe Content Security Policy (CSP) header.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss](https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss)\n - [https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url](https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url)\n - [https://content-security-policy.com/](https://content-security-policy.com/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.template-href-var"
                ]
              }
            },
            {
              "id": "2f285457-05a8-3529-a326-0100d3cd8124",
              "name": "python.lang.compatibility.python37.python37-compatibility-importlib2",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.compatibility.python37.python37-compatibility-importlib2"
              },
              "fullDescription": {
                "text": "Found 'importlib.resources', which is a module only available on Python 3.7+. This does not work in lower versions, and therefore is not backwards compatible. Use importlib_resources instead for older Python versions."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.compatibility.python37.python37-compatibility-importlib2",
              "help": {
                "text": "Found 'importlib.resources', which is a module only available on Python 3.7+. This does not work in lower versions, and therefore is not backwards compatible. Use importlib_resources instead for older Python versions.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Found 'importlib.resources', which is a module only available on Python 3.7+. This does not work in lower versions, and therefore is not backwards compatible. Use importlib_resources instead for older Python versions.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.compatibility.python37.python37-compatibility-importlib2)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.compatibility.python37.python37-compatibility-importlib2"
                ]
              }
            },
            {
              "id": "4052d253-f1d5-32c7-863b-216ed7e914db",
              "name": "resources.rules.template-href-var",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.template-href-var"
              },
              "fullDescription": {
                "text": "Detected a template variable used in an anchor tag with\nthe 'href' attribute. This allows a malicious actor to\ninput the 'javascript:' URI and is subject to cross-\nsite scripting (XSS) attacks. Use the 'url' template tag\nto safely generate a URL. You may also consider setting\nthe Content Security Policy (CSP) header.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Detected a template variable used in an anchor tag with\nthe 'href' attribute. This allows a malicious actor to\ninput the 'javascript:' URI and is subject to cross-\nsite scripting (XSS) attacks. Use the 'url' template tag\nto safely generate a URL. You may also consider setting\nthe Content Security Policy (CSP) header.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Detected a template variable used in an anchor tag with\nthe 'href' attribute. This allows a malicious actor to\ninput the 'javascript:' URI and is subject to cross-\nsite scripting (XSS) attacks. Use the 'url' template tag\nto safely generate a URL. You may also consider setting\nthe Content Security Policy (CSP) header.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss](https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss)\n - [https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url](https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url)\n - [https://content-security-policy.com/](https://content-security-policy.com/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.template-href-var"
                ]
              }
            },
            {
              "id": "5b8414fa-af6a-34ed-8517-9b995ff181ee",
              "name": "resources.rules.template-href-var",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.template-href-var"
              },
              "fullDescription": {
                "text": "Detected a template variable used in an anchor tag with\nthe 'href' attribute. This allows a malicious actor to\ninput the 'javascript:' URI and is subject to cross-\nsite scripting (XSS) attacks. Use the 'url' template tag\nto safely generate a URL. You may also consider setting\nthe Content Security Policy (CSP) header.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Detected a template variable used in an anchor tag with\nthe 'href' attribute. This allows a malicious actor to\ninput the 'javascript:' URI and is subject to cross-\nsite scripting (XSS) attacks. Use the 'url' template tag\nto safely generate a URL. You may also consider setting\nthe Content Security Policy (CSP) header.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Detected a template variable used in an anchor tag with\nthe 'href' attribute. This allows a malicious actor to\ninput the 'javascript:' URI and is subject to cross-\nsite scripting (XSS) attacks. Use the 'url' template tag\nto safely generate a URL. You may also consider setting\nthe Content Security Policy (CSP) header.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss](https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss)\n - [https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url](https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url)\n - [https://content-security-policy.com/](https://content-security-policy.com/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.template-href-var"
                ]
              }
            },
            {
              "id": "57e59c6d-9338-3e0f-9a1b-69342d4504cf",
              "name": "python.lang.compatibility.python37.python37-compatibility-importlib2",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.compatibility.python37.python37-compatibility-importlib2"
              },
              "fullDescription": {
                "text": "Found 'importlib.resources', which is a module only available on Python 3.7+. This does not work in lower versions, and therefore is not backwards compatible. Use importlib_resources instead for older Python versions."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.compatibility.python37.python37-compatibility-importlib2",
              "help": {
                "text": "Found 'importlib.resources', which is a module only available on Python 3.7+. This does not work in lower versions, and therefore is not backwards compatible. Use importlib_resources instead for older Python versions.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Found 'importlib.resources', which is a module only available on Python 3.7+. This does not work in lower versions, and therefore is not backwards compatible. Use importlib_resources instead for older Python versions.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.compatibility.python37.python37-compatibility-importlib2)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.compatibility.python37.python37-compatibility-importlib2"
                ]
              }
            }
          ],
          "language": "en-US",
          "contents": [
            "localizedData",
            "nonLocalizedData"
          ],
          "isComprehensive": false
        }
      },
      "language": "en-US",
      "results": [
        {
          "ruleId": "f728b990-5a67-3175-b152-ba92b4f435b2",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 49,
                  "endLine": 35,
                  "endColumn": 53,
                  "snippet": {
                    "text": "    configure_logging = lambda *args, **kwargs: None"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "bd12df5c1a9dde49b77819a92e60b38c9e93b4803c6bec205062a3bd0df456aa3adeb95d8177aa6b255db1d84895c41dc08dd49729153f792bcdd8026b8a9cb0_1"
          },
          "properties": {}
        },
        {
          "ruleId": "2d9243ff-6f22-33db-8074-4c6a2bdb7aaf",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 58,
                  "endLine": 36,
                  "endColumn": 62,
                  "snippet": {
                    "text": "    log_operation = lambda *args, **kwargs: lambda func: func"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "bd12df5c1a9dde49b77819a92e60b38c9e93b4803c6bec205062a3bd0df456aa3adeb95d8177aa6b255db1d84895c41dc08dd49729153f792bcdd8026b8a9cb0_2"
          },
          "properties": {}
        },
        {
          "ruleId": "4c5b94a0-28a2-39fb-8c32-c90c26daab84",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Found 'importlib.resources', which is a module only available on Python 3.7+. This does not work in lower versions, and therefore is not backwards compatible. Use importlib_resources instead for older Python versions."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 1,
                  "endLine": 7,
                  "endColumn": 44,
                  "snippet": {
                    "text": "import importlib.resources as pkg_resources"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "4be773a8edb45e58478d063b31579a0dbe9fab010800c656af3c1064a125d5f8a9e77a1f9411e526e34457a024042a183380513546dca256f98c31c919002a8e_0"
          },
          "properties": {}
        },
        {
          "ruleId": "c17838a4-6196-3d5b-bdcf-c2f6dfc9a413",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 42,
                  "endLine": 34,
                  "endColumn": 46,
                  "snippet": {
                    "text": "    get_logger = lambda *args, **kwargs: None"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "bd12df5c1a9dde49b77819a92e60b38c9e93b4803c6bec205062a3bd0df456aa3adeb95d8177aa6b255db1d84895c41dc08dd49729153f792bcdd8026b8a9cb0_0"
          },
          "properties": {}
        },
        {
          "ruleId": "268fe457-0c1f-3ab5-b399-891ed0ca9d96",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 61,
                  "endLine": 39,
                  "endColumn": 65,
                  "snippet": {
                    "text": "    profile_function = lambda *args, **kwargs: lambda func: func"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "bd12df5c1a9dde49b77819a92e60b38c9e93b4803c6bec205062a3bd0df456aa3adeb95d8177aa6b255db1d84895c41dc08dd49729153f792bcdd8026b8a9cb0_5"
          },
          "properties": {}
        },
        {
          "ruleId": "73991aea-cd00-3d14-a49f-9a8baeb75f53",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 44,
                  "endLine": 40,
                  "endColumn": 48,
                  "snippet": {
                    "text": "    get_profiler = lambda *args, **kwargs: None"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "bd12df5c1a9dde49b77819a92e60b38c9e93b4803c6bec205062a3bd0df456aa3adeb95d8177aa6b255db1d84895c41dc08dd49729153f792bcdd8026b8a9cb0_6"
          },
          "properties": {}
        },
        {
          "ruleId": "5a516f4d-3795-3771-8a00-1b571bc384b4",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 62,
                  "endLine": 38,
                  "endColumn": 66,
                  "snippet": {
                    "text": "    profile_operation = lambda *args, **kwargs: lambda func: func"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "bd12df5c1a9dde49b77819a92e60b38c9e93b4803c6bec205062a3bd0df456aa3adeb95d8177aa6b255db1d84895c41dc08dd49729153f792bcdd8026b8a9cb0_4"
          },
          "properties": {}
        },
        {
          "ruleId": "e79ca689-4f32-3ee3-942e-1d784d8b5294",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 34,
                  "endLine": 37,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    is_logging_enabled = lambda: False"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "bd12df5c1a9dde49b77819a92e60b38c9e93b4803c6bec205062a3bd0df456aa3adeb95d8177aa6b255db1d84895c41dc08dd49729153f792bcdd8026b8a9cb0_3"
          },
          "properties": {}
        },
        {
          "ruleId": "4be51b5c-b78f-302a-9a4c-ad5434993e24",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"\\n:margin 2\\n\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3447,
                  "startColumn": 20,
                  "endLine": 3447,
                  "endColumn": 64,
                  "snippet": {
                    "text": "    html_content = re.sub(r\"\\n:margin 2\\n\", \"\\n\", html_content)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "25b9cb313af9043950864e250552cf9829f69ede62cbea998ec7e4de22a279cb4aec323679ca3ed063e2e53bc3f1fc8732496f7fb7f9819f7776d064b6ff978e_0"
          },
          "properties": {}
        },
        {
          "ruleId": "3b9b2264-9ffc-3010-b3d0-812966b055c4",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"::::{grid}[^\\n]*\\n:margin 2\\n\\n::::\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3451,
                  "startColumn": 20,
                  "endLine": 3451,
                  "endColumn": 84,
                  "snippet": {
                    "text": "    html_content = re.sub(r\"::::{grid}[^\\n]*\\n:margin 2\\n\\n::::\", \"\", html_content)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "63841366264a277c1e51a99166709bca23e222eb9d897299650318fd1f22d4aeaff0bc1c385f396ac30852c28096a2078edfd0d19f189500039b258a41664967_0"
          },
          "properties": {}
        },
        {
          "ruleId": "781aea48-3a6f-32c8-ae7d-5b7d28fe0e53",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Detected direct use of jinja2. If not done properly, this may bypass HTML escaping which opens up the application to cross-site scripting (XSS) vulnerabilities. Prefer using the Flask method 'render_template()' and templates with a '.html' extension in order to prevent XSS."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3118,
                  "startColumn": 12,
                  "endLine": 3118,
                  "endColumn": 44,
                  "snippet": {
                    "text": "    return jinja_template.render(**context)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "eb72a2a3f2f532c1ce5c1367bf7a0983e1bda4ffbd799d5d8cbd475ceccec091ee0c7ec4e08f17a453c20aefb4d1a975f8091b9c6e16882ca1bb368934a99099_0"
          },
          "properties": {}
        },
        {
          "ruleId": "afea2490-6690-3aca-9657-7d2e38ef125a",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"[^a-z0-9-]\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3569,
                  "startColumn": 34,
                  "endLine": 3569,
                  "endColumn": 79,
                  "snippet": {
                    "text": "            formatted_vertical = re.sub(r\"[^a-z0-9-]\", \"\", formatted_vertical)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "1b38a229e62444f2590fc530affc7ff2c3c473f688cb2bdb2a285f97bae8939b25d9f06bdd7d812403b2405d7a35dac4e85ee4b7b1dcc5961c0236cf60da1408_0"
          },
          "properties": {}
        },
        {
          "ruleId": "c9955e05-3b27-395c-8d30-c36b2533e747",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"-+\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3753,
                  "startColumn": 30,
                  "endLine": 3753,
                  "endColumn": 68,
                  "snippet": {
                    "text": "        formatted_vertical = re.sub(r\"-+\", \"-\", formatted_vertical)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "756e95bb14d9e2f4ff3bbe3bd653570e9f779a76fc51eb3baae52dcb385f54e07317df7914a4d5221e1f49ee00df39e854569c5b84ed5488b8ab70d4e2f017de_1"
          },
          "properties": {}
        },
        {
          "ruleId": "9b412e2d-6088-3c56-91c8-1aa3c1f37fac",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"[^a-z0-9-]\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3752,
                  "startColumn": 30,
                  "endLine": 3752,
                  "endColumn": 75,
                  "snippet": {
                    "text": "        formatted_vertical = re.sub(r\"[^a-z0-9-]\", \"\", formatted_vertical)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "1b38a229e62444f2590fc530affc7ff2c3c473f688cb2bdb2a285f97bae8939b25d9f06bdd7d812403b2405d7a35dac4e85ee4b7b1dcc5961c0236cf60da1408_1"
          },
          "properties": {}
        },
        {
          "ruleId": "6c49369f-e516-3c4f-81ec-2a5f640f6aa6",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"-+\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3570,
                  "startColumn": 34,
                  "endLine": 3570,
                  "endColumn": 72,
                  "snippet": {
                    "text": "            formatted_vertical = re.sub(r\"-+\", \"-\", formatted_vertical)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "756e95bb14d9e2f4ff3bbe3bd653570e9f779a76fc51eb3baae52dcb385f54e07317df7914a4d5221e1f49ee00df39e854569c5b84ed5488b8ab70d4e2f017de_0"
          },
          "properties": {}
        },
        {
          "ruleId": "b34b7423-40b3-312d-b701-1e597f615046",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"[^a-z0-9-]\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3767,
                  "startColumn": 27,
                  "endLine": 3767,
                  "endColumn": 69,
                  "snippet": {
                    "text": "        output_filename = re.sub(r\"[^a-z0-9-]\", \"\", output_filename)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "1b38a229e62444f2590fc530affc7ff2c3c473f688cb2bdb2a285f97bae8939b25d9f06bdd7d812403b2405d7a35dac4e85ee4b7b1dcc5961c0236cf60da1408_2"
          },
          "properties": {}
        },
        {
          "ruleId": "4270cf53-106f-3495-9f91-59a6895cfda8",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"^---\\s*\\n(.*?)\\n---\\s*\\n\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/_rocmblogs.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 29,
                  "endLine": 28,
                  "endColumn": 79,
                  "snippet": {
                    "text": "        self.yaml_pattern = re.compile(r\"^---\\s*\\n(.*?)\\n---\\s*\\n\", re.DOTALL)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "289ee55375e9e5b5d662f2c6ec62fdc6add2975a6b7a6390b189d965df48efc53db11ee256fe85fb99938c4f7b0a872cec7633fc37b083695eae4596db282df7_0"
          },
          "properties": {}
        },
        {
          "ruleId": "ed0174a2-245a-38c9-945e-338a02775801",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"-+\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3882,
                  "startColumn": 25,
                  "endLine": 3882,
                  "endColumn": 54,
                  "snippet": {
                    "text": "            page_name = re.sub(r\"-+\", \"-\", page_name)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "756e95bb14d9e2f4ff3bbe3bd653570e9f779a76fc51eb3baae52dcb385f54e07317df7914a4d5221e1f49ee00df39e854569c5b84ed5488b8ab70d4e2f017de_2"
          },
          "properties": {}
        },
        {
          "ruleId": "9289663f-c790-3807-a60c-ecbc3de88c79",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"[^a-z0-9-]\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3881,
                  "startColumn": 25,
                  "endLine": 3881,
                  "endColumn": 61,
                  "snippet": {
                    "text": "            page_name = re.sub(r\"[^a-z0-9-]\", \"\", page_name)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "1b38a229e62444f2590fc530affc7ff2c3c473f688cb2bdb2a285f97bae8939b25d9f06bdd7d812403b2405d7a35dac4e85ee4b7b1dcc5961c0236cf60da1408_3"
          },
          "properties": {}
        },
        {
          "ruleId": "e02234d4-83e2-371d-8385-55c86b62eb6d",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"[^a-z0-9]+\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/banner.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 9,
                  "endLine": 144,
                  "endColumn": 57,
                  "snippet": {
                    "text": "        re.sub(r\"[^a-z0-9]+\", \"-\", part.strip().lower()) for part in category.split(\"-\")"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "21705c0e4617f9f07f43d94fd20321912d708c1cd88690d42996b6c56da3479c983b14de777a45c06cb44dbd3ad89114d11b19eccc3ae7ad17363eca777ce35e_0"
          },
          "properties": {}
        },
        {
          "ruleId": "b86b9230-411c-3343-a46a-512fbbb71383",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"[!@#$%^&*?/|]\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/constants/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 25,
                  "endLine": 14,
                  "endColumn": 53,
                  "snippet": {
                    "text": "SPECIAL_CHARS_PATTERN = re.compile(r\"[!@#$%^&*?/|]\")"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "e9527ca0d6b19f9c9c112a68dffb8348f645543fb810caf48d3397aa550b3a1a15c3ecafdd55c153fe189dc5a9ed5c093508d1835fc641ae88b4cef7611aebdd_0"
          },
          "properties": {}
        },
        {
          "ruleId": "3c355e61-1e9f-3c87-b8c8-c327989076b6",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"\\s+\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/constants/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 32,
                  "endLine": 15,
                  "endColumn": 50,
                  "snippet": {
                    "text": "WHITESPACE_PATTERN_FOR_SLUGS = re.compile(r\"\\s+\")"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "5d8e0108247836184274f1b3d07a3ca621ae89393dafdf2cc55f26965c8e80cb7dc6ad3776aca8c24cb837d8527660d6f3ca6c9ff4c2f48fb889de53998c540e_0"
          },
          "properties": {}
        },
        {
          "ruleId": "a306b6c1-d11f-3e89-8da5-bebadd7d62e7",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"^---\\s*\\n.*?\\n---\\s*\\n\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/constants/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 26,
                  "endLine": 21,
                  "endColumn": 74,
                  "snippet": {
                    "text": "    \"yaml_front_matter\": re.compile(r\"^---\\s*\\n.*?\\n---\\s*\\n\", re.DOTALL),"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "3aeec894482ef76ad3ab60e46d7560d132aabd25932d8a118467c7f8ce01db9b6bd1b822afb108d853e1d24387ea7ac730773cc2b4f394985aa86ee6fc19a160_0"
          },
          "properties": {}
        },
        {
          "ruleId": "611de93e-0e59-3fc5-8e8e-d69207727263",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"```[\\s\\S]*?```\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/constants/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 27,
                  "endLine": 22,
                  "endColumn": 56,
                  "snippet": {
                    "text": "    \"fenced_code_blocks\": re.compile(r\"```[\\s\\S]*?```\"),"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "dd811fbfb9f7d0fa9a3310f2eb185498fdf515dd3418ce72d4f16b7f71d83765387b3650ea183f9779332f90431060ba3a50618d7d2630ada86f5778c12b6679_0"
          },
          "properties": {}
        },
        {
          "ruleId": "6feb23aa-6706-385a-a436-ad10b38b0780",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"<[^>]*>\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/constants/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 18,
                  "endLine": 24,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    \"html_tags\": re.compile(r\"<[^>]*>\"),"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "6d29cc18ab9cd4eb997f0250ada3591a7c307c36bde3caeba4121db2b6c472847fed672274d9f4e475e0ff68bb99a94564a19c96b0320427f372b36cb31354c0_0"
          },
          "properties": {}
        },
        {
          "ruleId": "36e566a9-606f-317e-8888-01602f3417c3",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"https?://\\S+\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/constants/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 13,
                  "endLine": 25,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    \"urls\": re.compile(r\"https?://\\S+\"),"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "cc1e3aa6a66228dd75468b1b929b7b650298ca82463cb2b48586db7a402626ba0b68bff4ea7531f0a90026f484ed97e2032216201eaa5cea041f61d1fa3d09e6_0"
          },
          "properties": {}
        },
        {
          "ruleId": "7b3e8110-8c06-33a1-b17d-e727be96d0f8",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"(?m)^( {4}|\\t).*$\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/constants/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 29,
                  "endLine": 23,
                  "endColumn": 61,
                  "snippet": {
                    "text": "    \"indented_code_blocks\": re.compile(r\"(?m)^( {4}|\\t).*$\"),"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "0552c3033a3358ffef6c112156749ade6558fe23755ffba337b3c927d1725d7b92821726f50671efb39abf3d675300de665470feb760285b1ff5c72c2d6cc119_0"
          },
          "properties": {}
        },
        {
          "ruleId": "4d694d1c-d945-39a6-b536-6d810d496b18",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"(?m)^#.*$\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/constants/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 16,
                  "endLine": 28,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    \"headers\": re.compile(r\"(?m)^#.*$\"),"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "d67e0272e6c71c8a994178cf575ce44956edd34db320682725371b57c4bcbe63a9c516f2400f78ea7fac178c2767450099287273629e8e1059f080bdf90fadf5_0"
          },
          "properties": {}
        },
        {
          "ruleId": "58b64503-83d2-35d5-87dd-5b8aa8de0c1d",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"\\[[^\\]]*\\]\\([^)]*\\)\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/constants/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 24,
                  "endLine": 27,
                  "endColumn": 58,
                  "snippet": {
                    "text": "    \"link_references\": re.compile(r\"\\[[^\\]]*\\]\\([^)]*\\)\"),"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "ad3df8699ba995e2d6733c61794caef581cad22ea2ad11f3928263e3177a9d72a541b3203c38b5f20e15d4e7801426ce0b87286822cac583c2b330b7522252bb_0"
          },
          "properties": {}
        },
        {
          "ruleId": "49003574-f836-32f7-ba40-b7dd62ead992",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"(?m)^(---|[*]{3}|[_]{3})$\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/constants/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 25,
                  "endLine": 29,
                  "endColumn": 65,
                  "snippet": {
                    "text": "    \"horizontal_rules\": re.compile(r\"(?m)^(---|[*]{3}|[_]{3})$\"),"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "72a3cdb08aa5fc9fb642f5887cf1514ec5c9dbd3be6f834bffbdd06a312864c0e6cd5b433fb3dbb12bd990b8818d28801aa12a61e6d6330e1ebc127a3c5149ac_0"
          },
          "properties": {}
        },
        {
          "ruleId": "0d165f5d-fe1e-37ad-9c20-1e34fb7fb95d",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"!\\[[^\\]]*\\]\\([^)]*\\)\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/constants/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 25,
                  "endLine": 26,
                  "endColumn": 60,
                  "snippet": {
                    "text": "    \"image_references\": re.compile(r\"!\\[[^\\]]*\\]\\([^)]*\\)\"),"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "7a7eada10f47ca79cf4d83b782fb78ae450c327909bc85265c41510a666fe6f1a46a0b6f73bcfb83772490a35c8ae8d4552f355fd58d630cdff9dae4cd361f3e_0"
          },
          "properties": {}
        },
        {
          "ruleId": "23777399-f8a8-320b-9271-d8b8bffbbef7",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"(?m)^>.*$\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/constants/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 20,
                  "endLine": 30,
                  "endColumn": 44,
                  "snippet": {
                    "text": "    \"blockquotes\": re.compile(r\"(?m)^>.*$\"),"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "24e8090d8148328c49c27fadd0f2efdd7569f62c4149b398358ce97fd46a90c3921f4c500554b7ef0088af875aee8c61c9c5d414a32d0cc1f76b30ba9430e515_0"
          },
          "properties": {}
        },
        {
          "ruleId": "ad9df4c8-70c7-3ad4-b551-704e5ee40f23",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"(?m)^[ \\t]*[-*+][ \\t]+\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/constants/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 31,
                  "endLine": 31,
                  "endColumn": 68,
                  "snippet": {
                    "text": "    \"unordered_list_markers\": re.compile(r\"(?m)^[ \\t]*[-*+][ \\t]+\"),"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "1c5ab68e2177b742c134b303c252eceeda7bd6800067aca4fdf8916e4537e7037611e9d555400055ea3392f995c060537208d7bbd097a503d409b368c25b2e46_0"
          },
          "properties": {}
        },
        {
          "ruleId": "792a832e-6d75-3536-aac6-2b574deb06cc",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"\\s+\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/constants/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 19,
                  "endLine": 33,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    \"whitespace\": re.compile(r\"\\s+\"),"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "5d8e0108247836184274f1b3d07a3ca621ae89393dafdf2cc55f26965c8e80cb7dc6ad3776aca8c24cb837d8527660d6f3ca6c9ff4c2f48fb889de53998c540e_1"
          },
          "properties": {}
        },
        {
          "ruleId": "492bf243-f0b5-3b9b-ae53-c38f304097eb",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"(?m)^[ \\t]*\\d+\\.[ \\t]+\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/constants/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 29,
                  "endLine": 32,
                  "endColumn": 66,
                  "snippet": {
                    "text": "    \"ordered_list_markers\": re.compile(r\"(?m)^[ \\t]*\\d+\\.[ \\t]+\"),"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "f954ac9210842133a83c35acd2b2bd4137148f4f9c42c7d35113bd106b2709d07bb2b0bf201e6981daa1e5847cc2c7b0f1158396cf3d33190975339d8ec30f9e_0"
          },
          "properties": {}
        },
        {
          "ruleId": "ec366195-b383-3657-b2f6-4337c2be29c5",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "file object opened without corresponding close"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/grid.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 13,
                  "endLine": 22,
                  "endColumn": 72,
                  "snippet": {
                    "text": "            log_file_handle = open(log_filepath, \"a\", encoding=\"utf-8\")"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "4c38b2b44b22cf8d0fe256bcfd23d35a0b340c603f454d1c966998323894dbd6f7265c0209c1e6f938669fa0385ae311009386760c5f01fc692710fc84574735_0"
          },
          "properties": {}
        },
        {
          "ruleId": "4e1ae794-d729-3501-a99f-dee4bf0be89c",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "file object opened without corresponding close"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/holder.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 803,
                  "startColumn": 13,
                  "endLine": 803,
                  "endColumn": 72,
                  "snippet": {
                    "text": "            log_file_handle = open(log_filepath, \"w\", encoding=\"utf-8\")"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "c9fda1e017af398c6886c93ac89748980d1ca28e471a890a57e99e4fca14287baedb57d4a0c67fe692777008462ab43dd7e484c68cb87c7e185e2293ae55210e_0"
          },
          "properties": {}
        },
        {
          "ruleId": "0553911f-3ccc-38d5-9769-7f0b7d33bf01",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Found an unquoted CSV writer. This is susceptible to injection. Use 'quoting=csv.QUOTE_ALL'."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/holder.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 26,
                  "endLine": 214,
                  "endColumn": 42,
                  "snippet": {
                    "text": "                writer = csv.writer(file)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "4900a9b03a9b231be450d1fe8d3b480aaacb28bc1029a47ad8b11b5508a4825400a63f3ae4f7ff4f360df354d68167f6a9c0165fed16169b5f7c836d38305f61_0"
          },
          "properties": {}
        },
        {
          "ruleId": "646d76d3-779b-32a4-bd40-6716a033058c",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "file object opened without corresponding close"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/logger/logger.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 9,
                  "endLine": 87,
                  "endColumn": 68,
                  "snippet": {
                    "text": "        log_file_handle = open(log_filepath, \"w\", encoding=\"utf-8\")"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "16063d6235175d0b831558232e15562de75570abed27992c965ca41bd6265fa9828eea66b119fe06904b5c6c3c6594fa82197b061b3e1f0acb12fbca4d45e590_0"
          },
          "properties": {}
        },
        {
          "ruleId": "f918969c-c632-3703-836d-ed8f554b18b8",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"^# (.+)$\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/metadata.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 23,
                  "endLine": 101,
                  "endColumn": 60,
                  "snippet": {
                    "text": "TITLE_REGEX_PATTERN = re.compile(r\"^# (.+)$\", re.MULTILINE)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "3ea47281aaf4ff098f3ce2980c7bc1d785a91cb895b8c4212af74cf8befe0c0e175f7b6301335a7f72e0ce56a5133bfeb40a899fe7d55628809c28844cb35f2e_0"
          },
          "properties": {}
        },
        {
          "ruleId": "416366cb-80b2-32b0-bbeb-d88483de40a0",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"blogpost:\\s*true\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/metadata.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 26,
                  "endLine": 100,
                  "endColumn": 72,
                  "snippet": {
                    "text": "BLOGPOST_REGEX_PATTERN = re.compile(r\"blogpost:\\s*true\", re.IGNORECASE)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "435d2e9f00aa80689ea43dd79a50e30dfe1327a73f00fc8104eacdd05ce6aa442a3d809c59c823563f3979ba4b9309e3062b2f57b97129cda485e37399505d44_0"
          },
          "properties": {}
        },
        {
          "ruleId": "a15b5e99-16a9-38da-9231-8cca4d353330",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"^---\\s*\\n(.*?)\\n---\\s*\\n\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/metadata.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 26,
                  "endLine": 99,
                  "endColumn": 76,
                  "snippet": {
                    "text": "METADATA_REGEX_PATTERN = re.compile(r\"^---\\s*\\n(.*?)\\n---\\s*\\n\", re.DOTALL)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "5fe241fe354e996b06116a1a61f826d263d4aaf3dd6b25133ff57f5d9866da4d64dede3b7e8b454851c6aca22ae621f9c85d22ca1f7cafb8cd0fb7126e97860e_0"
          },
          "properties": {}
        },
        {
          "ruleId": "ab59049d-ac78-3a36-9473-7f116b6c113b",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"^# (.+)$\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/metadata.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 607,
                  "startColumn": 43,
                  "endLine": 607,
                  "endColumn": 80,
                  "snippet": {
                    "text": "                    title_regex_pattern = re.compile(r\"^# (.+)$\", re.MULTILINE)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "3ea47281aaf4ff098f3ce2980c7bc1d785a91cb895b8c4212af74cf8befe0c0e175f7b6301335a7f72e0ce56a5133bfeb40a899fe7d55628809c28844cb35f2e_1"
          },
          "properties": {}
        },
        {
          "ruleId": "fe5b0c05-8937-3f7b-a647-8add6dd2effa",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"^---\\s*\\n(.*?)\\n---\\s*\\n\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/metadata.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1279,
                  "startColumn": 46,
                  "endLine": 1281,
                  "endColumn": 22,
                  "snippet": {
                    "text": "                    metadata_regex_pattern = re.compile(\n                        r\"^---\\s*\\n(.*?)\\n---\\s*\\n\", re.DOTALL\n                    )"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "5fe241fe354e996b06116a1a61f826d263d4aaf3dd6b25133ff57f5d9866da4d64dede3b7e8b454851c6aca22ae621f9c85d22ca1f7cafb8cd0fb7126e97860e_1"
          },
          "properties": {}
        },
        {
          "ruleId": "060eab55-1789-36b9-aeba-719e31dfcd7e",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) youâ€™re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/templates/blog_statistics_template.html",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 1,
                  "endLine": 10,
                  "endColumn": 90,
                  "snippet": {
                    "text": "<script src=\"https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js\"></script>"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "177b10a33d019ca2e482f3711b31166f82e1a073415b487d17ebc9ea5486c0720cf4a4419f0cc7c2389627f8cfd8d58584fe9040a7c7a6664a3be56ae75a12dc_0"
          },
          "properties": {}
        },
        {
          "ruleId": "1bbbd0ae-11d4-34c6-9d71-bbad7100b846",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Detected a template variable used in an anchor tag with\nthe 'href' attribute. This allows a malicious actor to\ninput the 'javascript:' URI and is subject to cross-\nsite scripting (XSS) attacks. Use the 'url' template tag\nto safely generate a URL. You may also consider setting\nthe Content Security Policy (CSP) header.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/templates/vertical.html",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 247,
                  "startColumn": 1,
                  "endLine": 247,
                  "endColumn": 70,
                  "snippet": {
                    "text": "    <a href=\"{{ formatted_vertical }}-ecosystems-and-partners.html\">"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "3cdd5f29acfb24a9cba0a7d5cc8e8f62646ed006193f8ddc26ac134e4efca23c084d6ebf2b218469e9eac82a9d2f5a724cce31b9cb7cbec4208895f2818c744f_0"
          },
          "properties": {}
        },
        {
          "ruleId": "2f285457-05a8-3529-a326-0100d3cd8124",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Found 'importlib.resources', which is a module only available on Python 3.7+. This does not work in lower versions, and therefore is not backwards compatible. Use importlib_resources instead for older Python versions."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/process.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 44,
                  "snippet": {
                    "text": "import importlib.resources as pkg_resources"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "62437f5e4549b72362a46e02e1686fa7dc899b19b5d1898c47ec7b99275898ac43fa4893caa828501f359b568e4a57a18bb28d47d232d6991d61da41af0ffd2e_0"
          },
          "properties": {}
        },
        {
          "ruleId": "4052d253-f1d5-32c7-863b-216ed7e914db",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Detected a template variable used in an anchor tag with\nthe 'href' attribute. This allows a malicious actor to\ninput the 'javascript:' URI and is subject to cross-\nsite scripting (XSS) attacks. Use the 'url' template tag\nto safely generate a URL. You may also consider setting\nthe Content Security Policy (CSP) header.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/templates/vertical.html",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 263,
                  "startColumn": 1,
                  "endLine": 263,
                  "endColumn": 70,
                  "snippet": {
                    "text": "    <a href=\"{{ formatted_vertical }}-applications-and-models.html\">"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "3cdd5f29acfb24a9cba0a7d5cc8e8f62646ed006193f8ddc26ac134e4efca23c084d6ebf2b218469e9eac82a9d2f5a724cce31b9cb7cbec4208895f2818c744f_1"
          },
          "properties": {}
        },
        {
          "ruleId": "5b8414fa-af6a-34ed-8517-9b995ff181ee",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Detected a template variable used in an anchor tag with\nthe 'href' attribute. This allows a malicious actor to\ninput the 'javascript:' URI and is subject to cross-\nsite scripting (XSS) attacks. Use the 'url' template tag\nto safely generate a URL. You may also consider setting\nthe Content Security Policy (CSP) header.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/templates/vertical.html",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 279,
                  "startColumn": 1,
                  "endLine": 279,
                  "endColumn": 79,
                  "snippet": {
                    "text": "    <a href=\"{{ formatted_vertical }}-software-tools-and-optimizations.html\">"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "3cdd5f29acfb24a9cba0a7d5cc8e8f62646ed006193f8ddc26ac134e4efca23c084d6ebf2b218469e9eac82a9d2f5a724cce31b9cb7cbec4208895f2818c744f_2"
          },
          "properties": {}
        },
        {
          "ruleId": "57e59c6d-9338-3e0f-9a1b-69342d4504cf",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Found 'importlib.resources', which is a module only available on Python 3.7+. This does not work in lower versions, and therefore is not backwards compatible. Use importlib_resources instead for older Python versions."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/rocm_blogs/utils.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 44,
                  "snippet": {
                    "text": "import importlib.resources as pkg_resources"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "714cddb2f89769359c2033d17553bd36265ed90842b7f7c68440401541b949be5fd0219873adcd1f859792cc7112e3935e528780666a7b05549e2094e6c0f118_0"
          },
          "properties": {}
        }
      ],
      "newlineSequences": [
        "\r\n",
        "\n"
      ]
    }
  ]
}